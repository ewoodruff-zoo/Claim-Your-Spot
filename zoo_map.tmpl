<!DOCTYPE html>
<html>
<head>
	$HEADER$ 
<style>
	@font-face {
  		font-family: RussoOne;
  		src: url("fonts/RussoOne-Regular.ttf");
  		font-display: swap;
	}
	@font-face {
  		font-family: Raleway;
  		src: url("fonts/Raleway-Regular.ttf");
  		font-display: swap;
	}
    
    #full_page_container { display: grid; }
    
    @media only screen and (min-width: 800px) {
        /* Left side of screen 400px */
        #full_page_container {
            grid-template-columns: 400px auto;
            grid-template-rows: 100px calc(100vh - 100px);
            grid-template-areas:
                "zoo_logo zoo_map"
                "patrons zoo_map";
        }
        #zoo_logo img { width: 400px; }
        #patron_list p { font-size: x-large; }
	}
  
    @media only screen and (max-width: 799px) {
        #full_page_container {
            grid-template-columns: 1fr;
            grid-template-rows: 100px 200px calc(100vh - 300px);
            grid-template-areas:
                "zoo_logo"
                "patrons"
                "zoo_map";
        }
        #zoo_logo img { 
            width: 100%;
            height: 100px;
            margin: auto;
        }
        #patron_list p { font-size: large; }
    }
    
    #patron_list {
        overflow: auto;
		grid-area: patrons;
		background: black;
    }
    
	#patron_list p {
		text-align: center;
		padding: 20px;
		color: white;
		font-family: Raleway;
	}
	ul#patrons {
		font-size: medium;
		list-style-type: none;
		width: fit-content;
	}
	ul#patrons li {
		color: white;
		margin: 5px 0;
		border-left: 4px solid #062a42;
		transition: 0.5s;
		position: relative;
		left: 0;
		padding-left: 5px;
		font-family: RussoOne;
	}
	ul#patrons li:hover, .patron.hover {
		border-left: 4px solid #9f1c34;
		background: #9f1c34;
		cursor: pointer;
		left: 10px;
		color: white;
	}
    #zoo_map {
        grid-area: zoo_map;
    }
	#zoo_logo {
		grid-area: zoo_logo;
	}
	#zoo_logo img {
		object-fit: contain;
		background: black;
		padding: 10px;
	}
	.leaflet-container {
		background: #333;
	}
	.leaflet-tooltip-pane {
		font-size: large;
	}
	/* This part changes the scrollbar track (the part behind the scrollbar) */
	::-webkit-scrollbar-track {
  		background: #1E1E1E; /* Dark grey color, you can choose any color you like */
	}

	/* This part changes the scrollbar handle */
	::-webkit-scrollbar-thumb {
  		background: #555; /* Medium grey color, this is the actual scrollbar */
	}

	/* You can also change the scrollbar width and height */
	::-webkit-scrollbar {
  		width: 12px; /* Width of the vertical scrollbar */
  		height: 12px; /* Height of the horizontal scrollbar */
	}


</style>  
</head>
<body>
	<div id = "full_page_container">
		<div id = "patron_list">
	    		<p>Thank you for all of our existing patrons</p>
	    	<ul id="patrons">
		
	   	</ul>
		</div>
		<div id = "zoo_map">
	    		$BODY$       
		</div>
		<div id = "zoo_logo">
			<img src="images/NALZS_2B_Side_stack.png" alt="NALZS Logo">
		</div>
	</div>
</body>
<script>
	$SCRIPT$

	function addOutlineToRectangle(event){
		const patronName = event.target.innerHTML;
		for(const patron of patrons){
			if(patron.name == patronName) {
				const rectangle = patron.rectangle;
				rectangle.options.color = "#9f1c34";
				rectangle.options.stroke = true;
				rectangle.options.weight = 4; 
				rectangle.remove()
				rectangle.addTo(mapObj);
			}
		}
	}

	function removeOutline(event) { 
		const patronName = event.target.innerHTML;
		for(const patron of patrons){
			if(patron.name == patronName) {
				const rectangle = patron.rectangle;
				rectangle.options.color = "";
				rectangle.options.stroke = false;
				rectangle.options.weight = 0; 
				rectangle.remove()
				rectangle.addTo(mapObj);
			}
		}
	}

	function panAndZoom(event){
		const patronName = event.target.innerHTML;
		const patron = patrons.find((p) => p.name == patronName); // zoom to the first one
		const rectangle = patron.rectangle;
		mapObj.flyTo(rectangle.getCenter(), 3);
	}

	function onlyUnique(value, index, array) {
			return array.map((p) => p.name).indexOf(value.name) === index;
	}

	function highlightName(name){
		return () => {
			for(const patron of document.getElementsByClassName("patron")){
				if(patron.innerHTML === name){
					patron.classList.add("hover")
				}
			}
		};
	}
	
	function goToPatron(name) { 
		return () => {
			for(const patron of document.getElementsByClassName("patron")) {
				if(patron.innerHTML === name){
					patronList = document.getElementById("patron_list");
					patronList.scrollTo({top: patron.offsetTop - patronList.offsetTop - 20, behavior: "smooth"});
				}
			}
		};
	}

	function unhighlightName(name){
		return () => {
			for(const patron of document.getElementsByClassName("patron")){
				if(patron.innerHTML === name){
					patron.classList.remove("hover")
				}
			}
		};
	}

	for(const patron of patrons.filter(onlyUnique)){
	    const listItem = document.createElement("li");
		listItem.innerHTML = patron.name;
		listItem.classList.add("patron")
		listItem.addEventListener("mouseover", addOutlineToRectangle)
		listItem.addEventListener("mouseout", removeOutline)
		listItem.addEventListener("click", panAndZoom);
	    document.getElementById("patrons").appendChild(listItem)
	}

	for(const patron of patrons) {
		patron.rectangle.addEventListener("mouseover", highlightName(patron.name));
		patron.rectangle.addEventListener("mouseout", unhighlightName(patron.name));
		patron.rectangle.addEventListener("click", goToPatron(patron.name));
	}

</script>
</html>
